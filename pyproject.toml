[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "gomoku-ai"
version = "0.1.1"
authors = [
    {name = "Gomoku AI Team", email = "maksim.tkatchenko@gmail.com"},
]
description = "A modular Gomoku (Five in a Row) game implementation with AI agents"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment :: Board Games",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "gomoku", "five-in-a-row", "board-game", "ai", "machine-learning",
    "llm", "openai", "strategy", "tournament", "game-ai"
]
dependencies = [
    "openai>=1.0.0",
    "tenacity>=8.0.0",
    "GitPython>=3.1.0",
]

[project.optional-dependencies]
huggingface = [
    "transformers>=4.20.0",
    "torch>=1.12.0",
    "accelerate>=0.20.0",
]
web = [
    "flask>=2.0.0",
    "flask-sqlalchemy>=3.0.0",
    "werkzeug>=2.0.0",
]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "flake8>=5.0",
    "mypy>=1.0",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
]
examples = [
    "jupyter>=1.0",
    "matplotlib>=3.5",
]

[project.urls]
Homepage = "https://github.com/sitfoxfly/gomoku-ai"

[tool.setuptools.packages.find]
where = ["."]
include = ["gomoku*"]

[tool.setuptools.package-data]
gomoku = ["*.md", "*.html", "*.txt"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
asyncio_mode = "auto"